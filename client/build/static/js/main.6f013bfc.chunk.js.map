{"version":3,"sources":["styles/Theme.ts","components/atoms/Text.tsx","modules/InputCheker.ts","components/SignUp.tsx","components/page/Loading.tsx","components/Option.tsx","config/CookieKey.ts","App.tsx","reportWebVitals.js","reducers/Style.tsx","reducers/Index.tsx","index.js","modules/API.tsx","reducers/Login.tsx","modules/Common.ts","components/Header.tsx","components/atoms/RadioButton.tsx","reducers/Game.tsx","components/page/NotFound.tsx","components/ResetButton.tsx"],"names":["Theme","mainColor","fontColor","grayBackGround","HeaderFont","BodyFont","mainContentWidth","HeaderStyle","styled","div","size","isColor","theme","margin","bold","HeaderText","value","InlineStyle","span","InlineText","InputInvalidChecker","invalidText","id","email","pwd","name","this","duplicateCheck","invalid","invalidPasswordCheck","confirmPassword","regExpList","Promise","resolve","exec","msg","status","axiosApi","get","then","response","result","catch","err","regPwd","pwd1","pwd2","titleStyle","color","textAlign","marginBottom","SignUp","history","isLogin","useSelector","state","login","useEffect","replace","useState","failmsg","setFailMsg","chkpwd","inputs","setInputs","onChange","e","a","target","prev","run","inputList","map","element","idx","placeholder","inputType","className","type","ResetButton","inputLength","length","onReset","inputName","to","style","onSubmit","preventDefault","Object","entries","filter","post","res","goBack","LoadWrapper","Loading","count","setCount","tid","useRef","current","setInterval","clearInterval","bombs","Array","from","v","i","join","OptionContainer","selectedLevel","setSelectedLevel","undefined","levelList","localStorage","getItem","setItem","currentTarget","levelContainer","ele","key","isSelected","RadioButton","checked","fontSize","row","col","numberOfMine","Option","Header","selected","cookieKey","Game","lazy","SignIn","Bulletin","MyPage","Ranking","App","dispatch","useDispatch","parsedCookie","tmp","Cookies","tokenCookie","cookieParser","signedCookie","JSON","parse","slice","parseCookie","axios","defaults","headers","common","accessToken","setLogin","fallback","exact","path","component","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","mainFontColor","mainThemeColor","combineReducers","game","gameReducer","loginReducer","store","createStore","rootReducer","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById","SERVER_ADDRESS","instance","create","baseURL","withCredentials","url","data","console","error","patch","delete","ISLOGIN","loginInfo","payload","action","Easy","Normal","Hard","styles","textDecoration","HeaderTitle","HeaderMenu","MenuCenter","LogoutMenu","LoginMenu","title","item","onClick","Error","log","SETEXTRACELL","GAMERESET","RECORDTIME","gameRestart","isGameOver","takenTime","setExtraCell","diff","gameReset","reset","setRecordTime","time","NotFoundWrapper","props"],"mappings":"8GAkBeA,IATO,CACpBC,UAAW,UACXC,UAAW,UACXC,eAAgB,UAChBC,WAAW,wBACXC,SAAS,yBACTC,iBAAkB,U,iUCLdC,EAAcC,IAAOC,IAAV,yIAEF,qBAAGC,QACP,YAAyB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACnB,OAAmB,IAAZD,EAAmBC,EAAMX,UAAYW,EAAMV,aAE1C,qBAAEW,UACG,YACb,OAAgB,IADW,EAAXC,KACO,OAAS,QAI9BC,EAAa,SAAC,GAA6D,IAA3DL,EAA0D,EAA1DA,KAAMM,EAAoD,EAApDA,MAAOL,EAA6C,EAA7CA,QAA6C,IAApCE,cAAoC,MAA3B,SAA2B,EAE9E,OACE,mCACE,cAACN,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTE,OAAQA,EAHV,SAKGG,OAMHC,EAAcT,IAAOU,KAAV,0HAEF,qBAAGR,QACP,YAAyB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACnB,OAAmB,IAAZD,EAAmBC,EAAMX,UAAYW,EAAMV,aAErC,YACb,OAAgB,IADW,EAAXY,KACO,OAAS,QAI9BK,EAAa,SAAC,GAA0D,IAAD,IAAvDT,YAAuD,MAAhD,SAAgD,EAAtCM,EAAsC,EAAtCA,MAAOL,EAA+B,EAA/BA,QAAQG,EAAuB,EAAvBA,KAEpD,OACE,mCACE,cAACG,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTG,KAAMA,EAHR,SAKGE,Q,yZClDYI,E,iDAEFC,YAAmB,CAClCC,GAAI,CAAC,4FACH,qBACFC,MAAO,CACL,uBACA,wBAEFC,IAAM,iD,8EAGR,WAAiBC,EAAcT,EAAeQ,GAA9C,0EAIe,OAATC,GAA0B,UAATA,EAJvB,gCAKoBC,KAAKC,eAAe,CAAEF,OAAMT,UALhD,OAKIY,EALJ,iCAMsB,QAATH,EANb,iCAOoBC,KAAKG,qBAAqBJ,EAAMT,GAPpD,OAOIY,EAPJ,gDASoBF,KAAKI,gBAAgBd,EAAOQ,GAThD,QASII,EATJ,wCAYSA,GAZT,iD,uFAeA,YAAgE,IAAD,OAAvCH,EAAuC,EAAvCA,KAAMT,EAAiC,EAAjCA,MAItBe,EAAwC,CAC5CT,GAAI,uBACJC,MAAO,oFAGT,OAAO,IAAIS,SAAQ,SAACC,GAElB,GAAqC,OAAjCF,EAAWN,GAAMS,KAAKlB,GACxB,OAAOiB,EAAQ,CAAEE,IAAK,EAAKd,YAAYI,GAAM,GAAIW,QAAQ,IAG3DC,IAASC,IAAT,oBAA0Bb,EAA1B,YAAkCT,IAC/BuB,MAAK,SAACC,GACL,OAAwB,IAApBA,EAASC,OACJR,EAAQ,CAAEE,IAAK,EAAKd,YAAYI,GAAM,GAAIW,QAAQ,IAEpDH,EAAQ,CAAEE,IAAK,GAAIC,QAAQ,OAEnCM,OAAM,SAAAC,GAEL,MAAO,CAAER,IAAK,GAAIC,QAAQ,W,kCAKlC,SAA4BX,EAAcT,GAAwC,IAAD,OAEzE4B,EAAiB,sBAEvB,OAAO,IAAIZ,SAAQ,SAACC,GAElB,OAA2B,OAAvBW,EAAOV,KAAKlB,GACPiB,EAAQ,CAAEE,IAAK,EAAKd,YAAYI,GAAOW,QAAQ,IAE/CH,EAAQ,CAAEE,IAAK,GAAIC,QAAQ,S,6BAKxC,SAAuBS,EAAcC,GAEnC,OAAO,IAAId,SAAQ,SAACC,GAElB,OACSA,EADNY,IAASC,EACK,CAAEX,IAAK,8BAA+BC,QAAQ,GAE9C,CAAED,IAAK,GAAIC,QAAQ,W,qBC3EpCW,EAAa,CACjBC,MAAO,UACPC,UAAW,SACXC,aAAc,QAiJDC,EA9HA,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,QAERC,EAAYC,aAAY,SAACC,GAAD,MAAuB,CACrDF,QAASE,EAAMC,MAAMH,YADfA,QAIRI,qBAAU,YACQ,IAAZJ,GACFD,EAAQM,QAAQ,OAEjB,CAACL,EAASD,IAEb,MAA8BO,oBAAkB,GAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAoB,CAC9CrC,GAAI,CAAEN,MAAO,GAAIY,SAAS,EAAMO,IAAK,IACrCZ,MAAO,CAAEP,MAAO,GAAIY,SAAS,EAAMO,IAAK,IACxCX,IAAK,CAAER,MAAO,GAAIY,SAAS,EAAMO,IAAK,IACtC2B,OAAQ,CAAE9C,MAAO,GAAIY,SAAS,EAAMO,IAAK,MAJ3C,mBAAO4B,EAAP,KAAeC,EAAf,KAkCMC,EAAQ,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,wDAESD,EAAEE,OAAlB3C,EAFO,EAEPA,KAAMT,EAFC,EAEDA,MACd6C,GAAW,SAAAQ,GAAI,OAAI,MAE8B,IAAIjD,GACjCkD,IAAI7C,EAAMT,EAAO+C,EAAM,IAAQ/C,OAChDuB,MAAK,SAACC,GAELwB,EAAU,2BACLD,GADI,kBAENtC,EAAO,CACNT,MAAOA,EACPY,QAASY,EAASJ,OAClBD,IAAKK,EAASL,WAdP,2CAAH,sDA+BRoC,EAA2B,CAC/B,CAAC,KAAM,MAAO,CAAC,QAAS,UAAW,CAAC,MAAO,YAAa,CAAC,SAAU,oBAClEC,KAAI,SAACC,EAASC,GAEb,kBAA4BD,EAA5B,GAAOhD,EAAP,KAAakD,EAAb,KACMC,EAA6B,QAATnD,GAA2B,WAATA,EAAoB,WAAa,OAE7E,OACE,sBAAeoD,UAAU,kBAAzB,UACE,uBACEC,KAAMF,EACNnD,KAAMA,EACNkD,YAAaA,EACbV,SAAUA,EACVjD,MAAO+C,EAAOtC,GAAMT,QAEtB,cAAC+D,EAAA,EAAD,CACEC,YAAajB,EAAOtC,GAAMT,MAAMiE,OAAS,EACzCxD,KAAMA,EACNyD,QAAS,kBA7BFC,EA6BgB1D,OA5B/BuC,EAAU,2BACLD,GADI,kBACKoB,EAAY,CACtBnE,MAAO,GACPY,SAAS,MAJC,IAACuD,KA+BRpB,EAAOtC,GAAMG,SACTmC,EAAOtC,GAAMT,MAAMiE,OAAS,GAC5B,oBAAIJ,UAAU,eAAd,SAA8Bd,EAAOtC,GAAMU,QAfxCuC,MAoBhB,OACE,mCACE,qBAAKG,UAAU,mBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,IAAD,CAAMO,GAAG,IAAT,SACE,oBAAIC,MAAOtC,EAAX,4BAEDa,GAAW,uBAAOiB,UAAU,eAAjB,iDACZ,uBAAMS,SA9FS,SAACpB,GAItBA,EAAEqB,kBAKc,IAHAC,OAAOC,QAAQ1B,GAC5B2B,QAAO,+CAAkB,IAAlB,KAAiC9D,WAASqD,OAAS,GAK7D5C,IAASsD,KAAT,YAA2B,CACzB,GAAM5B,EAAOzC,GAAGN,MAChB,MAAS+C,EAAOxC,MAAMP,MACtB,IAAO+C,EAAOvC,IAAIR,QAEjBuB,MAAK,SAACqD,IACc,IAAfA,EAAInD,OACNoB,GAAW,SAAAQ,GAAI,OAAI,KAEnBjB,EAAQyC,aAyER,UACGtB,EACD,8BACE,uBAAOO,KAAK,SAAS9D,MAAM,yB,gCChJnC8E,EAActF,IAAOC,IAAV,yJAgDFsF,EAxCC,WAEd,MAA0BpC,mBAAS,GAAnC,mBAAOqC,EAAP,KAAcC,EAAd,KACMC,EAAMC,iBAAO,MAEnB1C,qBAAU,WASR,OARAyC,EAAIE,QAAUC,aAAY,WAEtBJ,EADED,GAAS,EACF,EAGF,SAAC3B,GAAD,OAAUA,EAAO,MACzB,KAEI,WACLiC,cAAcJ,EAAIE,SAClBF,EAAIE,QAAU,QAEf,CAACJ,IAEJ,IAAMO,EAAQC,MAAMC,KAAK,CAAExB,OAAQe,IAAS,SAACU,EAAGC,GAAJ,MAAU,kBAAMC,KAAK,IAEjE,OACE,mCACE,eAACd,EAAD,WACE,cAAC,IAAD,CACEpF,KAAM,SACNC,SAAS,EACTK,MAAO,YAET,cAAC,IAAD,CACEN,KAAM,SACNC,SAAS,EACTK,MAAOuF,U,wBCtCXM,G,OAAkB,WAEtB,MAA0ClD,mBAAiB,IAA3D,mBAAOmD,EAAP,KAAsBC,EAAtB,KAEAtD,qBAAU,gBAE8CuD,IAAlDC,IAAUC,aAAaC,QAAQ,eAKnCJ,EAAiBG,aAAaC,QAAQ,eAJpCJ,EAAiB,UAKlB,IAEH,IAAM9C,EAAW,SAACC,GAChBgD,aAAaE,QAAQ,aAAclD,EAAEmD,cAAcrG,OACnD+F,EAAiB7C,EAAEmD,cAAcrG,QAG7BsG,EAAgC9B,OAAOC,QAAQwB,KAAWzC,KAAI,SAAC+C,EAAK7C,GAExE,kBAAqB6C,EAArB,GAAOC,EAAP,KAAYxG,EAAZ,KACMyG,EAAaX,IAAkBU,EAErC,OACE,sBAAK3C,UAAU,uBAAf,UACE,cAAC6C,EAAA,EAAD,CACEjG,KAAK,QACLT,MAAOwG,EACPvD,SAAUA,EACV0D,QAASF,IACX,kCACE,sBAAMpC,MAAO,CAAEuC,SAAU,QAAzB,SAAoCJ,IADtC,IAEU,uBAFV,UAGMxG,EAAM6G,IAHZ,cAGqB7G,EAAM8G,IAH3B,mBAGyC9G,EAAM+G,mBATNrD,MAe/C,OACE,mCACE,uBAAMG,UAAU,mBAAhB,UACE,cAAC,IAAD,CACEnE,KAAM,SACNM,MAAO,aACPL,SAAS,IAEV2G,SAgBMU,EAVA,WAEb,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,SAAS,WACjB,cAAC,EAAD,Q,2CC9DSC,EAJG,CAChBX,IAAK,gB,SCgBDY,EAAOC,gBAAK,kBAAM,iCAClBC,EAASD,gBAAK,kBAAM,kCACpBE,EAAWF,gBAAK,kBAAM,8DACtBG,EAASH,gBAAK,kBAAM,8DACpBI,EAAUJ,gBAAK,kBAAM,iCAcZ,SAASK,IACtB,IAAMC,EAAWC,cAgBjB,OAbAnF,qBAAU,WAER,IAAMoF,EAlBU,SAACpH,GAEnB,IACMqH,GADS,IAAIC,KACAzG,IAAYb,GACzBuH,EAAcC,IAAaC,aAAaJ,EAAKX,EAAUX,KAE7D,GAAKwB,EAGL,OAAOG,KAAKC,MAAMJ,EAAYK,MAAM,IASbC,CAAY,eAE7BT,IACFU,IAAMC,SAASC,QAAQC,OAAvB,+BAA2Db,EAAac,aACxEhB,EAASiB,YAAS,CAChBvG,SAAS,EACT/B,GAAIuH,EAAavH,UAMrB,mCACE,cAAC,IAAD,CAAeV,MAAOA,IAAtB,SACE,cAAC,WAAD,CAAUiJ,SAAU,cAAC,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5B,IACjC,cAAC,IAAD,CAAO2B,KAAK,UAAUC,UAAW1B,IACjC,cAAC,IAAD,CAAOyB,KAAK,UAAUC,UAAW7G,IACjC,cAAC,IAAD,CAAO4G,KAAK,kBAAkBC,UAAWvB,IACzC,cAAC,IAAD,CAAOsB,KAAK,aAAaC,UAAWzB,IACpC,cAAC,IAAD,CAAOwB,KAAK,UAAUC,UAAWxB,IACjC,cAAC,IAAD,CAAOuB,KAAK,UAAUC,UAAWhC,IACjC,cAAC,IAAD,CAAOgC,UAAWC,eChE9B,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqB7H,MAAK,YAAkD,IAA/C8H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCIRO,EAA2B,CAC/BC,cAAe,UACfC,eAAgB,WCFHC,iCAA2B,CACxCC,KAAMC,IACNvH,MAAOwH,IACP3F,MDGa,WAAyF,IAAnE9B,EAAkE,uDAA9CmH,EACvD,OAAOnH,K,qBEPH0H,GAAQC,sBAAYC,GAAaC,MAEvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,EAAD,UAINO,SAASC,eAAe,SAM1BvB,K,gCC3BA,IAEIwB,EAFJ,QAMEA,EAAiB,4BA4BnB,IAAMC,EAlCN,OAkCgCpC,EAAMqC,OAAO,CAE3CC,QAAQ,GAAD,OAAKH,GACZjC,QAAS,CACP,eAAgB,mBAChB,OAAU,oBAEZqC,iBAAiB,IAGbzJ,EAA2B,CAE/BC,IAAK,SAACyJ,GAAD,OAAiBJ,EAASrJ,IAAIyJ,GAChCxJ,MAAK,SAACC,GAAD,OAAuCA,EAASwJ,QACrDtJ,OAAM,SAAAC,GAAG,OAAIsJ,QAAQC,MAAMvJ,OAE9BgD,KAAM,SAACoG,EAAaC,GAAd,OAA+CL,EAAShG,KAAKoG,EAAKC,GACrEzJ,MAAK,SAACC,GAAD,OAAuCA,EAASwJ,QACrDtJ,OAAM,SAAAC,GAAG,OAAIsJ,QAAQC,MAAMvJ,OAE9BwJ,MAAO,SAACJ,EAAaC,GAAd,OAA+CL,EAASQ,MAAMJ,EAAKC,GACvEzJ,MAAK,SAACC,GAAD,OAAuCA,EAASwJ,QACrDtJ,OAAM,SAAAC,GAAG,OAAIsJ,QAAQC,MAAMvJ,OAE9ByJ,OAAQ,SAACL,EAAaC,GAAd,OAA+CL,EAASS,OAAOL,EAAKC,GACzEzJ,MAAK,SAACC,GAAD,OAAuCA,EAASwJ,QACrDtJ,OAAM,SAAAC,GAAG,OAAIsJ,QAAQC,MAAMvJ,QAejBN,O,+GC1EFgK,EAAU,gBAYjB3B,EAA4B,CAChCrH,SAAS,EACT/B,GAAI,IAGOsI,EAAW,SAAC0C,GAAD,MAA0C,CAChExH,KAAMuH,EACNE,QAASD,IAII,SAAStB,IAAmF,IAAtEzH,EAAqE,uDAAhDmH,EAAc8B,EAAkC,uCACxG,OAAQA,EAAO1H,OACRuH,EACI,2BACF9I,GADL,IAEEF,QAASmJ,EAAOD,QAAQlJ,QACxB/B,GAAIkL,EAAOD,QAAQjL,KAGdiC,I,gCC7BZ,kCAIM,IAAM0D,EAAuB,CAClCwF,KAAM,CAAE5E,IAAK,GAAIC,IAAK,GAAIC,aAAc,IACxC2E,OAAQ,CAAE7E,IAAK,GAAIC,IAAK,GAAIC,aAAc,IAC1C4E,KAAM,CAAE9E,IAAK,GAAIC,IAAK,GAAIC,aAAc,M,gCCX1C,kDAgBM6E,EAAS,CACb5J,MAAO,QACP6J,eAAgB,aAGZC,EAAc,WAClB,OACE,qBAAKjI,UAAU,kBAAf,SACE,cAAC,IAAD,CAAMO,GAAG,IAAT,SACE,oDAMF2H,EAAa,SAAC,GAAqC,IAApC1J,EAAmC,EAAnCA,QAAS6E,EAA0B,EAA1BA,SAE5B,OACE,sBAAKrD,UAAU,iBAAf,UACE,qBAAKA,UAAU,cACf,cAACmI,EAAD,CAAY9E,SAAUA,IACrB7E,EAAU,cAAC4J,EAAD,IAAiB,cAACC,EAAD,QAK5BF,EAAa,SAAC,GAAwC,IAAtC9E,EAAqC,EAArCA,SAWpB,OAEE,qBAAKrD,UAAU,cAAf,SAVA,CACE,CAAEsI,MAAO,OAAQpB,IAAK,KACtB,CAAEoB,MAAO,UAAWpB,IAAK,wBACzB,CAAEoB,MAAO,YAAapB,IAAK,qBAC3B,CAAEoB,MAAO,SAAUpB,IAAK,WACxB,CAAEoB,MAAO,SAAUpB,IAAK,YAMlBvH,KAAI,SAAC4I,EAAM1I,GACf,OACE,cAAC,IAAD,CAAgBU,GAAIgI,EAAKrB,IAAzB,SACG7D,IAAakF,EAAKD,MACjB,oBAAI9H,MAAOuH,EAAX,SAAoBQ,EAAKD,QACzB,6BAAKC,EAAKD,SAHHzI,SAWfwI,EAAY,WAEhB,OACE,mCACE,sBAAKrI,UAAU,aAAf,UACE,cAAC,IAAD,CAAMO,GAAG,UAAT,SACE,qBAAKP,UAAU,cAAf,SACE,8CAKJ,cAAC,IAAD,CAAMO,GAAG,UAAT,SACE,qBAAKP,UAAU,cAAf,SACE,oDAWNoI,EAAa,WAEjB,IAAMtE,EAAWC,cAcjB,OACE,mCACE,qBAAK/D,UAAU,aAAf,SACE,qBAAKA,UAAU,cAAcwI,QAhBpB,WACbhL,IAASsD,KAAT,eACGpD,MAAK,SAACC,GACL,IAAwB,IAApBA,EAASC,OACX,MAAM,IAAI6K,MAAM,gBAGlB3E,EAASiB,YAAS,CAAEvG,SAAS,EAAO/B,GAAI,SAGzCoB,OAAM,SAAAwB,GAAC,OAAI+H,QAAQsB,IAAIrJ,OAMtB,SACE,kDA0BK+D,IAjBA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAEV7E,EAAUC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,MAAMH,WAE9D,OACE,mCACE,mCACE,cAACyJ,EAAD,IACA,cAACC,EAAD,CACE1J,QAASA,EACT6E,SAAUA,W,gCCrIpB,gBAuBeR,IAdK,SAAC,GAA0D,IAAxDjG,EAAuD,EAAvDA,KAAMT,EAAiD,EAAjDA,MAAOiD,EAA0C,EAA1CA,SAAU0D,EAAgC,EAAhCA,QAE5C,OACE,mCACE,uBACE7C,KAAK,QACLrD,KAAMA,EACNT,MAAOA,EACPiD,SAAUA,EACV0D,QAASA,Q,mLCfJ6F,EAAe,oBACfC,EAAY,iBACZC,EAAa,kBAcpBhD,EAA0B,CAC9BiD,aAAa,EACbC,WAAY,UACZC,WAAY,GAIDC,EAAe,SAACC,GAAD,MAAmB,CAC7CjJ,KAAM0I,EACNjB,QAASwB,IAGEC,EAAY,SAACD,GAAD,MAAoB,CAC3CjJ,KAAM2I,EACNQ,MAAOF,IAGIG,EAAgB,SAACC,GAAD,MAAkB,CAC7CrJ,KAAM4I,EACNnB,QAAS4B,IAII,SAASpD,IAA6E,IAAjExH,EAAgE,uDAA7CmH,EAAc8B,EAA+B,uCAClG,OAAQA,EAAO1H,MACb,KAAK0I,EACH,OAAO,2BACFjK,GADL,IAEEqK,WAAYpB,EAAOD,UAEvB,KAAKkB,EACH,kCACKlK,GADL,IAEEoK,YAAanB,EAAOyB,QAExB,KAAKP,EACH,kCACKnK,GADL,IAEEsK,UAAWrB,EAAOD,UAEtB,QACE,OAAOhJ,K,qECzDP6K,EAAkB5N,IAAOC,IAAV,wIA4BNwJ,IApBE,WAEf,OACE,mCACE,eAACmE,EAAD,WACE,cAAC,IAAD,CACE1N,KAAM,SACNM,MAAO,mBACPL,SAAS,IAEX,cAAC,IAAD,CACED,KAAM,SACNM,MAAO,YACPL,SAAS,W,gCCxBnB,gBAsBeoE,IAdK,SAACsJ,GAEnB,IAAQrJ,EAA+BqJ,EAA/BrJ,YAAavD,EAAkB4M,EAAlB5M,KAAMyD,EAAYmJ,EAAZnJ,QAE3B,OACE,mCACGF,GAAe,wBACdvD,KAAMA,EACNoD,UAAU,YACVwI,QAASnI,S","file":"static/js/main.6f013bfc.chunk.js","sourcesContent":["export interface ITheme {\r\n  mainColor: string;\r\n  fontColor: string;\r\n  grayBackGround: string;\r\n  HeaderFont: string;\r\n  BodyFont: string;\r\n  mainContentWidth: string;\r\n}\r\n\r\nconst Theme: ITheme = {\r\n  mainColor: '#1033E3',\r\n  fontColor: '#383640',\r\n  grayBackGround: '#e0e0e0',\r\n  HeaderFont: `'Roboto', sans-serif'`,\r\n  BodyFont: `'Tajawal', sans-serif'`,\r\n  mainContentWidth: '824px'\r\n}\r\n\r\nexport default Theme;","import styled from 'styled-components';\r\n\r\ninterface ITextStyle {\r\n  size?: string;\r\n  isColor?: boolean;\r\n  value?: string;\r\n  bold?: boolean;\r\n  margin?: string;\r\n}\r\n\r\nconst HeaderStyle = styled.div<ITextStyle>`\r\n  font-family: 'Roboto', sans-serif;\r\n  font-size: ${({ size }) => size};\r\n  color: ${({ isColor, theme }) => {\r\n    return isColor === true ? theme.mainColor : theme.fontColor;\r\n  }};\r\n  margin: ${({margin}) => margin};\r\n  font-weight: ${({ bold }) => {\r\n    return bold === true ? 'bold' : null;\r\n  }};\r\n`;\r\n\r\nconst HeaderText = ({ size, value, isColor, margin = '18px 0' }: ITextStyle) => {\r\n\r\n  return (\r\n    <>\r\n      <HeaderStyle\r\n        size={size}\r\n        isColor={isColor}\r\n        margin={margin}\r\n      >\r\n        {value}\r\n      </HeaderStyle>\r\n    </>\r\n  )\r\n}\r\n\r\nconst InlineStyle = styled.span<ITextStyle>`\r\n  font-family: 'Tajawal', sans-serif;\r\n  font-size: ${({ size }) => size};\r\n  color: ${({ isColor, theme }) => {\r\n    return isColor === true ? theme.mainColor : theme.fontColor;\r\n  }};\r\n  font-weight: ${({ bold }) => {\r\n    return bold === true ? 'bold' : null;\r\n  }};\r\n`;\r\n\r\nconst InlineText = ({ size = '1.0rem', value, isColor,bold }: ITextStyle) => {\r\n  \r\n  return (\r\n    <>\r\n      <InlineStyle\r\n        size={size}\r\n        isColor={isColor}\r\n        bold={bold}\r\n      >\r\n        {value}\r\n      </InlineStyle>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { HeaderText, InlineText };","import axiosApi,{Response} from './API';\r\n\r\nexport interface InvalidStatus {\r\n  msg: string;\r\n  status: boolean;\r\n};\r\n\r\nexport default class InputInvalidChecker {\r\n\r\n  private readonly invalidText: any = {\r\n    id: ['5~15 characters consisting of English letters(a-zA-Z), numbers, or special characters (_)',\r\n      'id already exists'],\r\n    email: [\r\n      'the email is invalid',\r\n      'email already exists'\r\n    ],\r\n    pwd : 'The password must be at least 6 to 15 digits.'\r\n  }\r\n\r\n  public async run(name: string, value: string, pwd: string): Promise<InvalidStatus> {\r\n\r\n    let invalid: InvalidStatus;\r\n\r\n    if (name === 'id' || name === 'email') {\r\n      invalid = await this.duplicateCheck({ name, value });\r\n    } else if (name === 'pwd') {\r\n      invalid = await this.invalidPasswordCheck(name, value);\r\n    } else {\r\n      invalid = await this.confirmPassword(value, pwd);\r\n    }\r\n\r\n    return invalid;\r\n  }\r\n\r\n  public duplicateCheck({ name, value }): Promise<InvalidStatus> {\r\n\r\n    // 정규표현식을 멤버변수로 두면 결과값이 매번 달라짐 왜???????????????????? 진짜 이상하네\r\n    // 정규식은 스택안에서만 사용해야 하나??? 뭐 어디 이상한데 두면 오류나네........\r\n    const regExpList: { [key: string]: RegExp } = {\r\n      id: /^[A-za-z0-9]{5,15}$/g,  // 영문 대문자 또는 소문자 또는 숫자로 시작 길이는 5 ~ 15\r\n      email: /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i\r\n    };\r\n\r\n    return new Promise((resolve) => {\r\n\r\n      if (regExpList[name].exec(value) === null) {\r\n        return resolve({ msg: this.invalidText[name][0], status: true });\r\n      }\r\n\r\n      axiosApi.get(`/api/user?${name}=${value}`)\r\n        .then((response: Response) => {\r\n          if (response.result === true) {\r\n            return resolve({ msg: this.invalidText[name][1], status: true });\r\n          }\r\n          return resolve({ msg: '', status: false });\r\n        })\r\n        .catch(err => {\r\n          // 웹서버와 통신 중 장애 발생 시 에러처리 아이디 중복체크로 회원가입 방지\r\n          return { msg: '', status: true };\r\n        });\r\n    })\r\n  }\r\n\r\n  public invalidPasswordCheck(name: string, value: string): Promise<InvalidStatus> {\r\n\r\n    const regPwd: RegExp = /^[A-Za-z0-9]{6,15}$/;\r\n\r\n    return new Promise((resolve) => {\r\n\r\n      if (regPwd.exec(value) === null) {\r\n        return resolve({ msg: this.invalidText[name], status: true });\r\n      } else {\r\n        return resolve({ msg: '', status: false });\r\n      }\r\n    })\r\n  }\r\n\r\n  public confirmPassword(pwd1: string, pwd2:string): Promise<InvalidStatus>{\r\n    \r\n    return new Promise((resolve) => {\r\n\r\n      if(pwd1 !== pwd2){\r\n        return resolve({ msg: \"The password doesn't match.\", status: true });\r\n      }else{\r\n        return resolve({ msg: '', status: false });\r\n      }\r\n    })\r\n  }\r\n}","import { useSelector } from 'react-redux';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport ResetButton from './ResetButton';\r\nimport InputInvalidChecker, { InvalidStatus } from '../modules/InputCheker'\r\nimport axiosApi, { Response } from '../modules/API';\r\nimport { RootState } from '../reducers';\r\nimport '../styles/Signup.css';\r\n\r\nconst titleStyle = {\r\n  color: '#1033e3',\r\n  textAlign: 'center' as const,\r\n  marginBottom: '50px'\r\n};\r\n\r\n\r\ninterface InputElement {\r\n  value: string;\r\n  invalid: boolean;\r\n  msg: string;\r\n}\r\n\r\n\r\ninterface InputList {\r\n  id: InputElement;\r\n  email: InputElement;\r\n  pwd: InputElement;\r\n  chkpwd: InputElement;\r\n};\r\n\r\n\r\nconst SignUp = ({ history }: RouteComponentProps) => {\r\n\r\n  const { isLogin } = useSelector((state: RootState) => ({\r\n    isLogin: state.login.isLogin\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (isLogin === true) {\r\n      history.replace('/');\r\n    }\r\n  }, [isLogin, history]);\r\n\r\n  const [failmsg, setFailMsg] = useState<boolean>(false);\r\n  const [inputs, setInputs] = useState<InputList>({\r\n    id: { value: '', invalid: true, msg: '' },\r\n    email: { value: '', invalid: true, msg: '' },\r\n    pwd: { value: '', invalid: true, msg: '' },\r\n    chkpwd: { value: '', invalid: true, msg: '' }\r\n  });\r\n\r\n  const submintHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n\r\n    // post 방식으로 보낼 때 이벤트를 막아야 한다.\r\n    // 민감한 정보가 쿼리스트링으로 전달 \r\n    e.preventDefault();\r\n\r\n    const invalid = Object.entries(inputs)\r\n      .filter(([key, value]) => true === value.invalid).length > 0;\r\n\r\n    if (invalid === true)\r\n      return;\r\n\r\n    axiosApi.post(`/api/user`, {\r\n      \"id\": inputs.id.value,\r\n      \"email\": inputs.email.value,\r\n      \"pwd\": inputs.pwd.value\r\n    })\r\n      .then((res: Response) => {\r\n        if (res.result === false) {\r\n          setFailMsg(prev => true);\r\n        } else {\r\n          history.goBack();\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  const onChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n    const { name, value } = e.target;\r\n    setFailMsg(prev => false);\r\n\r\n    const inputInvalidChecker: InputInvalidChecker = new InputInvalidChecker();\r\n    inputInvalidChecker.run(name, value, inputs['pwd'].value)\r\n      .then((response: InvalidStatus) => {\r\n\r\n        setInputs({\r\n          ...inputs,\r\n          [name]: {\r\n            value: value,\r\n            invalid: response.status,\r\n            msg: response.msg\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  const onReset = (inputName: string) => {\r\n    setInputs({\r\n      ...inputs, [inputName]: {\r\n        value: '',\r\n        invalid: true\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  const inputList: JSX.Element[] = [\r\n    ['id', 'ID'], ['email', 'E-mail'], ['pwd', 'Password'], ['chkpwd', 'Repeat Password']]\r\n    .map((element, idx) => {\r\n\r\n      const [name, placeholder] = element;\r\n      const inputType: string = name === 'pwd' || name === 'chkpwd' ? 'password' : 'text';\r\n\r\n      return (\r\n        <div key={idx} className='input-container'>\r\n          <input\r\n            type={inputType}\r\n            name={name}\r\n            placeholder={placeholder}\r\n            onChange={onChange}\r\n            value={inputs[name].value}\r\n          />\r\n          <ResetButton\r\n            inputLength={inputs[name].value.length > 0}\r\n            name={name}\r\n            onReset={() => onReset(name)}\r\n          />\r\n          {inputs[name].invalid\r\n            && inputs[name].value.length > 0\r\n            && <h5 className='invalid-text'>{inputs[name].msg}</h5>}\r\n        </div>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <div className='signup-container'>\r\n        <div className='signup-wrapper'>\r\n          <Link to=\"/\">\r\n            <h1 style={titleStyle}>Mine Sweeper</h1>\r\n          </Link>\r\n          {failmsg && <label className='invalid-text'>Please try again in a little while.</label>}\r\n          <form onSubmit={submintHandler}>\r\n            {inputList}\r\n            <div>\r\n              <input type='submit' value='Sign up'></input>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SignUp","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { InlineText } from '../atoms/Text';\r\n\r\nconst LoadWrapper = styled.div`\r\n  font-family: 'Roboto', sans-serif;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  position: absolute;\r\n`;\r\n\r\nconst Loading = () => {\r\n\r\n  const [count, setCount] = useState(0);\r\n  const tid = useRef(null);\r\n\r\n  useEffect(() => {\r\n    tid.current = setInterval(() => {\r\n      if (count >= 3) {\r\n        setCount(0);\r\n        return;\r\n      }\r\n      setCount((prev) => prev + 1);\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(tid.current);\r\n      tid.current = null;\r\n    };\r\n  }, [count]);\r\n\r\n  const bombs = Array.from({ length: count }, (v, i) => '💣').join('');\r\n\r\n  return (\r\n    <>\r\n      <LoadWrapper>\r\n        <InlineText\r\n          size={'4.2rem'}\r\n          isColor={false}\r\n          value={\"Loading\"}\r\n        />\r\n        <InlineText\r\n          size={'1.8rem'}\r\n          isColor={false}\r\n          value={bombs}\r\n        />\r\n      </LoadWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Loading;","import React, { useEffect, useState } from 'react';\r\nimport { levelList } from '../modules/Common';\r\nimport RadioButton from './atoms/RadioButton';\r\nimport { HeaderText } from './atoms/Text';\r\nimport Header from './Header';\r\nimport '../styles/Option.css';\r\n\r\nconst OptionContainer = () => {\r\n\r\n  const [selectedLevel, setSelectedLevel] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n\r\n    if (levelList[localStorage.getItem('difficulty')] === undefined) {\r\n      setSelectedLevel('Easy');\r\n      return;\r\n    }\r\n\r\n    setSelectedLevel(localStorage.getItem('difficulty'));\r\n  }, []);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    localStorage.setItem('difficulty', e.currentTarget.value);\r\n    setSelectedLevel(e.currentTarget.value);\r\n  }\r\n\r\n  const levelContainer: JSX.Element[] = Object.entries(levelList).map((ele, idx) => {\r\n\r\n    const [key, value] = ele;\r\n    const isSelected = selectedLevel === key;\r\n\r\n    return (\r\n      <div className='option-row-container' key={idx}>\r\n        <RadioButton\r\n          name='level'\r\n          value={key}\r\n          onChange={onChange}\r\n          checked={isSelected} />\r\n        <label>\r\n          <span style={{ fontSize: '18px' }}>{key}\r\n          </span> <br />\r\n          {`${value.row} X ${value.col} Mine : ${value.numberOfMine}`}\r\n        </label>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <main className='option-container'>\r\n        <HeaderText \r\n          size={'1.4rem'}\r\n          value={'Difficulty'}\r\n          isColor={true}\r\n        />\r\n        {levelContainer}\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Option = () => {\r\n\r\n  return (\r\n    <>\r\n      <Header selected='Option' />\r\n      <OptionContainer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Option;","const cookieKey = {\r\n  key: 'v0erk32902FS'\r\n};\r\n\r\nexport default cookieKey;","import React, { useEffect, lazy, Suspense } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Cookies } from 'react-cookie';\r\nimport './styles/App.css';\r\nimport SignUp from './components/SignUp';\r\nimport NotFound from './components/page/NotFound';\r\nimport Loading from './components/page/Loading';\r\nimport Option from './components/Option';\r\nimport axios from 'axios';\r\nimport { setLogin } from './reducers/Login';\r\nimport { useDispatch } from 'react-redux';\r\nimport cookieParser from 'cookie-parser';\r\nimport cookieKey from './config/CookieKey';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport theme from './styles/Theme';\r\n\r\n// 라우팅 또는 페이지 컴포넌트에서 가져와야 한다.\r\nconst Game = lazy(() => import('./components/Game'));\r\nconst SignIn = lazy(() => import('./components/SignIn'));\r\nconst Bulletin = lazy(() => import('./components/route/Community'));\r\nconst MyPage = lazy(() => import('./components/route/MyPage'));\r\nconst Ranking = lazy(() => import('./components/Ranking'));\r\n\r\nconst parseCookie = (name: string) => {\r\n\r\n  const cookie = new Cookies();\r\n  const tmp = cookie.get<string>(name);\r\n  const tokenCookie = cookieParser.signedCookie(tmp, cookieKey.key);\r\n\r\n  if (!tokenCookie)\r\n    return;\r\n\r\n  return JSON.parse(tokenCookie.slice(2));\r\n}\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  // Authorization 헤더는 새로고침 브라우저 꺼지면 사라지므로\r\n  // 컴포넌트 새로 마운트 될 때 마다 토큰 박음\r\n  useEffect(() => {\r\n\r\n    const parsedCookie = parseCookie('accessToken');\r\n\r\n    if (parsedCookie) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${parsedCookie.accessToken}`;\r\n      dispatch(setLogin({\r\n        isLogin: true,\r\n        id: parsedCookie.id\r\n      }));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <Suspense fallback={<Loading/>}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Game} />\r\n            <Route path=\"/signin\" component={SignIn} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/ranking/:level\" component={Ranking} />\r\n            <Route path=\"/community\" component={Bulletin} />\r\n            <Route path=\"/mypage\" component={MyPage} />\r\n            <Route path=\"/option\" component={Option} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Suspense>\r\n      </ThemeProvider>\r\n    </>\r\n  )\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export interface StyleState {\r\n  mainFontColor: string;\r\n  mainThemeColor: string;\r\n};\r\n\r\ninterface GameAction {\r\n  type: string,\r\n  payload: number,\r\n  reset: boolean\r\n}\r\n\r\nconst initialState: StyleState = {\r\n  mainFontColor: '#504e5a',\r\n  mainThemeColor: '#1033e3',\r\n};\r\n\r\n// 리듀서\r\nexport default function styleReducer(state: StyleState = initialState, action: GameAction): StyleState {\r\n  return state;\r\n}","import { combineReducers } from 'redux';\r\nimport gameReducer, { GameState } from './Game';\r\nimport loginReducer, { LoginStatus } from './Login';\r\nimport styleReducer, { StyleState } from './Style';\r\n\r\nexport interface RootState {\r\n  game: GameState,\r\n  login: LoginStatus,\r\n  style: StyleState\r\n}\r\n\r\nexport default combineReducers<RootState>({\r\n  game: gameReducer,\r\n  login: loginReducer,\r\n  style: styleReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers/Index';\r\nimport composeWithDevTools from 'redux-devtools-extension'; // 리덕스 개발자 도구\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","import axios, { AxiosResponse, AxiosInstance } from 'axios';\r\n\r\nlet SERVER_ADDRESS: string;\r\nif (process.env.NODE_ENV === 'development') {\r\n  SERVER_ADDRESS = 'http://localhost:8080';\r\n} else {\r\n  SERVER_ADDRESS = 'http://13.125.83.254:8080';\r\n}\r\n\r\nexport interface AxiosInterface {\r\n  get: (url: string, data?: any) => Promise<any>;\r\n  post: (url: string, data?: any) => Promise<any>;\r\n  patch: (url: string, data?: any) => Promise<any>;\r\n  delete: (url: string, data?: any) => Promise<any>;\r\n}\r\n\r\nexport interface Response {\r\n  result: boolean;\r\n  message?: string;\r\n  data?: any\r\n  loginInfo?: {\r\n    id: string;\r\n    accessToken: string;\r\n  }\r\n}\r\n\r\n// const config = {\r\n//   headers: {\r\n//     'Content-type': 'application/json',\r\n//     'Accept': 'application/json',\r\n//   },\r\n//   withCredentials: true\r\n// };\r\n\r\nconst instance: AxiosInstance = axios.create({\r\n\r\n  baseURL: `${SERVER_ADDRESS}`, // 기본 서버 주소 입력\r\n  headers: {\r\n    'Content-type': 'application/json',\r\n    'Accept': 'application/json',\r\n  },\r\n  withCredentials: true\r\n})\r\n\r\nconst axiosApi: AxiosInterface = {\r\n\r\n  get: (url: string) => instance.get(url)\r\n    .then((response: AxiosResponse<Response>) => response.data)\r\n    .catch(err => console.error(err)),\r\n\r\n  post: (url: string, data: { [key: string]: any }) => instance.post(url, data)\r\n    .then((response: AxiosResponse<Response>) => response.data)\r\n    .catch(err => console.error(err)),\r\n\r\n  patch: (url: string, data: { [key: string]: any }) => instance.patch(url, data)\r\n    .then((response: AxiosResponse<Response>) => response.data)\r\n    .catch(err => console.error(err)),\r\n\r\n  delete: (url: string, data: { [key: string]: any }) => instance.delete(url, data)\r\n    .then((response: AxiosResponse<Response>) => response.data)\r\n    .catch(err => console.error(err)),\r\n};\r\n\r\n// export abstract class AxiosHandler {\r\n\r\n//   public static instance: AxiosInstance = axios.create({\r\n//     baseURL: `${SERVER_ADDRESS}`, // 기본 서버 주소 입력\r\n//     headers: {\r\n//       'Content-type': 'application/json',\r\n//       'Accept': 'application/json',\r\n//     },\r\n//     withCredentials: true\r\n//   });\r\n// }\r\n\r\nexport default axiosApi;","// action 정의 \r\nexport const ISLOGIN = 'login/ISLOGIN' as const;\r\n\r\nexport interface LoginStatus {\r\n  isLogin: boolean\r\n  id: string\r\n};\r\n\r\ninterface LoginAction {\r\n  type: string,\r\n  payload: LoginStatus\r\n};\r\n\r\nconst initialState: LoginStatus = {\r\n  isLogin: false,\r\n  id: '',\r\n};\r\n\r\nexport const setLogin = (loginInfo: LoginStatus): LoginAction => ({\r\n  type: ISLOGIN,\r\n  payload: loginInfo\r\n});\r\n\r\n// 리듀서\r\nexport default function loginReducer(state: LoginStatus = initialState, action: LoginAction): LoginStatus {\r\n  switch (action.type) {\r\n    case ISLOGIN:\r\n      return {\r\n        ...state,\r\n        isLogin: action.payload.isLogin,\r\n        id: action.payload.id\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","export interface Level {\r\n  row: number,\r\n  col: number,\r\n  numberOfMine: number\r\n};\r\n\r\nexport type LevelType = { [key: string]: Level };\r\n\r\nexport const levelList: LevelType = {\r\n  Easy: { row: 10, col: 10, numberOfMine: 10 },\r\n  Normal: { row: 16, col: 16, numberOfMine: 40 },\r\n  Hard: { row: 16, col: 30, numberOfMine: 99 },\r\n};\r\n\r\nexport interface CellData {\r\n  mine: boolean,\r\n  neighbor: number,\r\n  visited: boolean,\r\n  flaged: boolean,\r\n  visible: number | string,\r\n}\r\n\r\nexport interface Coord {\r\n  y: number,\r\n  x: number\r\n};\r\n\r\nexport interface BoardSize {\r\n  row: number,\r\n  col: number\r\n}\r\n\r\nexport interface ClickRenderStatus{\r\n  render: boolean;\r\n  flag:boolean;\r\n  removeCell: number;\r\n}","import '../styles/Header.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootState } from '../reducers';\r\nimport { setLogin } from '../reducers/Login';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axiosApi, { Response } from '../modules/API';\r\n\r\ninterface HeaderProps {\r\n  selected?: string;\r\n};\r\n\r\ninterface MenuProps {\r\n  isLogin: boolean;\r\n  selected: string;\r\n}\r\n\r\nconst styles = {\r\n  color: 'white',\r\n  textDecoration: 'underline'\r\n};\r\n\r\nconst HeaderTitle = () => {\r\n  return (\r\n    <div className='title-container'>\r\n      <Link to=\"/\">\r\n        <h2> Mine Sweeper</h2>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst HeaderMenu = ({isLogin, selected }: MenuProps) => {\r\n\r\n  return (\r\n    <div className='menu-container'>\r\n      <div className='menu-left' />\r\n      <MenuCenter selected={selected} />\r\n      {isLogin ? <LogoutMenu /> : <LoginMenu />}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst MenuCenter = ({ selected }: { selected: string }) => {\r\n\r\n  const menu =\r\n    [\r\n      { title: 'Game', url: '/' },\r\n      { title: 'Ranking', url: '/ranking/easy?page=1' },\r\n      { title: 'Community', url: '/community?page=1' },\r\n      { title: 'MyPage', url: '/mypage' },\r\n      { title: 'Option', url: '/option' }\r\n    ];\r\n\r\n  return (\r\n\r\n    <div className='menu-center'>\r\n      {menu.map((item, idx: number) => {\r\n        return (\r\n          <Link key={idx} to={item.url}>\r\n            {selected === item.title ?\r\n              <h4 style={styles}>{item.title}</h4> :\r\n              <h4>{item.title}</h4>}\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst LoginMenu = () => {\r\n\r\n  return (\r\n    <>\r\n      <div className='menu-right'>\r\n        <Link to=\"/signin\">\r\n          <div className='sign-button'>\r\n            <div>\r\n              Sign In\r\n            </div>\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/signup\">\r\n          <div className='sign-button'>\r\n            <div>\r\n              Sign Up\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst LogoutMenu = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const logout = () => {\r\n    axiosApi.post(`/api/logout`)\r\n      .then((response: Response) => {\r\n        if (response.result === false) {\r\n          throw new Error('logout error');\r\n        }\r\n\r\n        dispatch(setLogin({ isLogin: false, id: '' }));\r\n        // history.push('/');\r\n      })\r\n      .catch(e => console.log(e))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='menu-right'>\r\n        <div className='sign-button' onClick={logout}>\r\n          <div>\r\n            Sign Out\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Header = ({ selected }: HeaderProps) => {\r\n\r\n  const isLogin = useSelector((state: RootState) => state.login.isLogin);\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <HeaderTitle />\r\n        <HeaderMenu\r\n          isLogin={isLogin}\r\n          selected={selected}\r\n        />\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\ninterface RadioButtonProps {\r\n  name: string;\r\n  value: string;\r\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\r\n  checked: boolean;\r\n}\r\n\r\nconst RadioButton = ({ name, value, onChange, checked }: RadioButtonProps) => {\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='radio'\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        checked={checked} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RadioButton;","// 액션 타입을 선언\r\n// 뒤에 as const 를 붙여줌으로써 나중에 액션 객체를 만들게 action.type 의 값을 추론하는 과정에서\r\n// action.type 이 string 으로 추론되지 않고 같이 실제 문자열 값으로 추론 되도록 \r\nexport const SETEXTRACELL = 'game/SETEXTRACELL' as const;\r\nexport const GAMERESET = 'game/GAMERESET' as const;\r\nexport const RECORDTIME = 'game/RECORDTIME' as const;\r\n\r\nexport interface GameState {\r\n  gameRestart: boolean,\r\n  isGameOver: number,\r\n  takenTime:number\r\n};\r\n\r\ninterface GameAction {\r\n  type: string,\r\n  payload: number,\r\n  reset:boolean\r\n}\r\n\r\nconst initialState: GameState = {\r\n  gameRestart: false,\r\n  isGameOver: 987654321,\r\n  takenTime: -1\r\n};\r\n\r\n// action creator\r\nexport const setExtraCell = (diff: number) => ({\r\n  type: SETEXTRACELL,\r\n  payload: diff\r\n});\r\n\r\nexport const gameReset = (diff: boolean) => ({\r\n  type: GAMERESET,\r\n  reset: diff\r\n})\r\n\r\nexport const setRecordTime = (time:number) => ({\r\n  type: RECORDTIME,\r\n  payload: time\r\n})\r\n\r\n// 리듀서\r\nexport default function gameReducer(state: GameState = initialState, action: GameAction): GameState {\r\n  switch (action.type) {\r\n    case SETEXTRACELL:\r\n      return {\r\n        ...state,\r\n        isGameOver: action.payload\r\n      }\r\n    case GAMERESET:\r\n      return{\r\n        ...state,\r\n        gameRestart: action.reset\r\n      }\r\n    case RECORDTIME:\r\n      return{\r\n        ...state,\r\n        takenTime: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import styled from 'styled-components';\r\nimport { HeaderText } from '../atoms/Text';\r\n\r\nconst NotFoundWrapper = styled.div`\r\n  position: absolute; \r\n  top:50%;\r\n  left:50%;\r\n  transform: translate(-50%, -50%);\r\n  text-align:center;\r\n`;\r\n\r\nconst NotFound = () => {\r\n\r\n  return (\r\n    <>\r\n      <NotFoundWrapper>\r\n        <HeaderText\r\n          size={'5.5rem'}\r\n          value={'4 💣 4'}\r\n          isColor={false}\r\n        />\r\n        <HeaderText\r\n          size={'3.5rem'}\r\n          value={'Not Found'}\r\n          isColor={false}\r\n        />\r\n      </NotFoundWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\n\r\ninterface ResetButtonProps {\r\n  inputLength : boolean;\r\n  name : string;\r\n  onReset: React.MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nconst ResetButton = (props: ResetButtonProps) => {\r\n\r\n  const { inputLength, name, onReset } = props;\r\n\r\n  return (\r\n    <>\r\n      {inputLength && <button\r\n        name={name}\r\n        className='btn-reset'\r\n        onClick={onReset} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResetButton;"],"sourceRoot":""}