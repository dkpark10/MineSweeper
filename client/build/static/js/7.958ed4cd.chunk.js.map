{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","modules/ClickFactory.ts","components/Modal.tsx","modules/CellHandler.ts","components/GameInfo.tsx","modules/ClickHandler.ts","modules/LeftClickHandler.ts","modules/RightClickHandler.ts","modules/WheelClickHandler.ts","components/Cell.tsx","components/GameBoard.tsx","components/Game.tsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","_inherits","subClass","superClass","prototype","create","constructor","value","writable","configurable","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof","obj","_possibleConstructorReturn","self","call","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","NewTarget","this","Reflect","construct","arguments","apply","_setPrototypeOf","p","_isNativeReflectConstruct","sham","Proxy","Date","toString","e","_assertThisInitialized","ReferenceError","CLICKTYPE","GameModal","levelInfo","dispatch","useDispatch","useSelector","state","extraCell","game","isGameOver","takenTime","userId","login","id","isGameSuccess","useEffect","console","log","axiosApi","post","record","success","level","then","res","gameReset","localStorage","setItem","className","onClick","setRecordTime","initializeCell","row","col","length","map","mine","neighbor","visited","flaged","visible","plantMine","cellData","numberOfMine","tmp","ranY","window","crypto","getRandomValues","Uint8Array","ranX","calcNeighbor","y","x","board","ret","i","j","checkOutRange","borderY","borderX","getCount","count","String","GameInfo","firstClick","numofFlag","useState","setCount","timerId","useRef","beginTime","current","getTime","setInterval","clearInterval","endTime","directionY","directionX","ClickHandler","c","coo","bs","coord","boardSize","numofExtraCell","setNeighborCell","nextY","nextX","depthFirstSearch","noRender","render","flag","removeCell","gameOver","LeftClickHandler","RightClickHandler","WheelClickHandler","numofHit","numofAroundFlag","isFlagonMine","createClickFactory","buttonType","cd","LEFTCLICK","RIGHTCLCK","WHEELCLICK","colorofButtonNumber","Cell","props","islock","onMouseDown","onContextMenu","strColor","style","color","GameBoardWrapper","styled","div","minWidth","GameBoard","cellHandler","setCellData","setFirstClick","setNumofFlag","gameRestart","newCellData","setExtraCell","onFirstClick","isFirstClick","gameBoard","rowItem","data","preventDefault","button","clickController","renderStatus","process","getCellData","onCellClick","Game","levelList","getItem","Easy","checkLevel","useMemo","checkMinWidth","Header","selected"],"mappings":"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","file":"static/js/7.958ed4cd.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import { ClickHandler } from './ClickHandler';\r\nimport LeftClickHandler from './LeftClickHandler';\r\nimport RightClickHandler from './RightClickHandler';\r\nimport WheelClickHandler from './WheelClickHandler';\r\nimport { CellData, Coord, BoardSize } from './Common';\r\n\r\nenum CLICKTYPE { LEFTCLICK = 0, WHEELCLICK, RIGHTCLCK };\r\n\r\nconst createClickFactory = (buttonType: number, cd: CellData[][], coo: Coord, bs: BoardSize): ClickHandler => {\r\n  switch (buttonType) {\r\n    case CLICKTYPE.LEFTCLICK:\r\n      return new LeftClickHandler(cd, coo, bs);\r\n    case CLICKTYPE.RIGHTCLCK:\r\n      return new RightClickHandler(cd, coo);\r\n    case CLICKTYPE.WHEELCLICK:\r\n      return new WheelClickHandler(cd, coo, bs);\r\n  }\r\n}\r\n\r\nexport default createClickFactory;","import '../styles/Modal.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../Reducers';\r\nimport { gameReset, setRecordTime } from '../reducers/Game';\r\nimport { useEffect } from 'react';\r\nimport axiosApi, { Response } from '../modules/API';\r\n\r\ninterface ModalProps{\r\n  levelInfo: string;\r\n}\r\n\r\nconst GameModal = ({ levelInfo }: ModalProps) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { extraCell, takenTime, userId } = useSelector((state: RootState) => ({\r\n    extraCell: state.game.isGameOver,\r\n    takenTime: state.game.takenTime,\r\n    userId: state.login.id\r\n  }));\r\n\r\n  const isGameSuccess = extraCell === 0 ? true : false;\r\n\r\n  useEffect(() => {\r\n\r\n    if (takenTime !== -1 && userId && userId !== '') {\r\n\r\n      console.log(isGameSuccess);\r\n      axiosApi.post(`/api/auth/game`, {\r\n        id: userId,\r\n        record: takenTime / 1000,\r\n        success: isGameSuccess,\r\n        level: levelInfo\r\n      })\r\n        .then((res: Response) => { ; });\r\n    }\r\n    dispatch(gameReset(false));\r\n\r\n    return () => localStorage.setItem('difficulty', levelInfo);\r\n  }, [isGameSuccess, takenTime, userId, dispatch, levelInfo]);\r\n\r\n  const gameRestart = () => {\r\n    dispatch(gameReset(true));\r\n    dispatch(setRecordTime(-1));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={extraCell <= 0 ? 'modal' : 'modal hidden'}>\r\n        <div className='modal-overlay'></div>\r\n        <div className='modal-content'>\r\n          <div> Time : {takenTime / 1000}</div>\r\n          <div> Level : {levelInfo}</div>\r\n          <button className='closemodal' onClick={gameRestart}>Close</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GameModal;","import { Level, CellData } from './Common';\r\n\r\nexport const initializeCell = (row: number, col: number): CellData[][] => {\r\n  \r\n  const ret: CellData[][] = Array.from({ length: row }, () => Array)\r\n    .map(() => Array.from({ length: col }, () => {\r\n      return {\r\n        mine: false,\r\n        neighbor: 0,\r\n        visited: false,\r\n        flaged: false,\r\n        visible: ' '\r\n      };\r\n    }))\r\n\r\n  return ret;\r\n}\r\n\r\nexport const plantMine = (cellData: CellData[][], numberOfMine: number) => {\r\n\r\n  const row = cellData.length;\r\n  const col = cellData[0].length;\r\n  let tmp = numberOfMine;\r\n\r\n  while (tmp) {\r\n    \r\n    // 보안상 이유로 랜덤함수 교체\r\n    // const ranY = Math.floor(Math.random() * row);\r\n    // const ranX = Math.floor(Math.random() * col);\r\n\r\n    const ranY = window.crypto.getRandomValues(new Uint8Array(1))[0] % row;\r\n    const ranX = window.crypto.getRandomValues(new Uint8Array(1))[0] % col;\r\n\r\n    if (cellData[ranY][ranX].mine === false) {\r\n      cellData[ranY][ranX].mine = true;\r\n      tmp--;\r\n    }\r\n  }\r\n}\r\n\r\nexport const getNeighbor = (cellData: CellData[][], level: Level) => {\r\n\r\n  const { row, col, }: Level = level;\r\n\r\n  for (let i = 0; i < row; i++) {\r\n    for (let j = 0; j < col; j++) {\r\n      cellData[i][j].neighbor = calcNeighbor(i, j, cellData, level);\r\n    }\r\n  }\r\n}\r\n\r\nconst calcNeighbor = (y: number, x: number, board: CellData[][], { row, col }): number => {\r\n\r\n  let ret = 0;\r\n\r\n  for (let i = y - 1; i <= y + 1; i++) {\r\n    for (let j = x - 1; j <= x + 1; j++) {\r\n\r\n      if (checkOutRange(i, j, row, col))\r\n        continue;\r\n\r\n      if (y === i && x === j)\r\n        continue;\r\n\r\n      if (board[i][j].mine === true)\r\n        ret++;\r\n    }\r\n  }\r\n  return ret;\r\n}\r\n\r\nexport const checkOutRange = (y: number, x: number, borderY: number, borderX: number): boolean => {\r\n  return y < 0 || x < 0 || y >= borderY || x >= borderX;\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport '../styles/Gameinfo.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setRecordTime } from '../reducers/Game';\r\n\r\ninterface Props {\r\n  firstClick: boolean,\r\n  numofFlag: number,\r\n  isGameOver: boolean\r\n};\r\n\r\nconst getCount = (count: number): string => {\r\n  if (count < 10) {\r\n    return `00${count}`;\r\n  } else if (count >= 10 && count < 100) {\r\n    return `0${count}`;\r\n  } else {\r\n    return String(count);\r\n  }\r\n}\r\n\r\nconst GameInfo = ({firstClick, numofFlag, isGameOver}: Props) => {\r\n\r\n  // // 초기 젓 마운트 될 때 남은 깃발 갯수 리듀서에 작성\r\n  // useEffect(() => {\r\n  //   dispatch(setFlagNumber(numberOfMine));\r\n  // }, []);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [count, setCount] = useState<number>(0);\r\n\r\n  const timerId = useRef<any>(null);\r\n  let beginTime = useRef<any>(null);\r\n\r\n  // 첫클릭 후 타이머 시작\r\n  useEffect(() => {\r\n    beginTime.current = new Date().getTime();\r\n    timerId.current = setInterval(() => {\r\n      if (firstClick === false) {\r\n        setCount((count) => count + 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timerId.current);\r\n  }, [firstClick]);\r\n\r\n  // 게임종료시\r\n  useEffect(() => {\r\n\r\n    if (isGameOver) {\r\n\r\n      const endTime = new Date().getTime();\r\n      dispatch(setRecordTime(endTime - beginTime.current));\r\n      beginTime.current = null;\r\n      setCount(count => 0);\r\n    }\r\n\r\n    clearInterval(timerId.current);\r\n    timerId.current = null;\r\n  }, [isGameOver, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <div className='gameinfo'>\r\n        <span> ⏳\r\n          <label> {getCount(count)}</label>\r\n        </span>\r\n        <span className='heart'>💗</span>\r\n        <span> 🚩\r\n          <label> {numofFlag} </label>\r\n        </span>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GameInfo;","import { CellData, Coord, BoardSize, ClickRenderStatus } from './Common';\r\n\r\nconst directionY: number[] = [0, 0, 1, -1, -1, -1, 1, 1];\r\nconst directionX: number[] = [1, -1, 0, 0, -1, 1, -1, 1];\r\n\r\nexport abstract class ClickHandler {\r\n\r\n  protected readonly cellData: CellData[][];\r\n  protected readonly coord: Coord;\r\n  protected readonly boardSize?: BoardSize;\r\n\r\n  constructor(c: CellData[][], coo: Coord, bs?: BoardSize) {\r\n    this.cellData = c;\r\n    this.coord = coo;\r\n    this.boardSize = bs;\r\n  }\r\n\r\n  public getCellData(): CellData[][] {\r\n    return this.cellData;\r\n  }\r\n\r\n  public checkOutRange(y: number, x: number): boolean {\r\n    return y < 0 || x < 0 || y >= this.boardSize.row || x >= this.boardSize.col;\r\n  }\r\n\r\n  public depthFirstSearch(coord: Coord): number {\r\n\r\n    let numofExtraCell: number = 1;\r\n    const { y, x }: Coord = coord;\r\n    const cellData: CellData[][] = this.cellData;\r\n    \r\n    cellData[y][x].visited = true;\r\n\r\n    numofExtraCell += this.setNeighborCell(coord);\r\n\r\n    for (let i = 0; i < 8; i++) {\r\n      const nextY = y + directionY[i];\r\n      const nextX = x + directionX[i];\r\n\r\n      if (this.checkOutRange(nextY, nextX)) {\r\n        continue;\r\n      }\r\n\r\n      // 방문한곳이 아니어야하며\r\n      // 주위 지뢰가 없는 순수한칸이며\r\n      // 깃발이 꽂혀있지 않으며\r\n      // 지뢰가 있지 않은곳으로 연쇄충돌\r\n      if (cellData[nextY][nextX].visited === false\r\n        && cellData[nextY][nextX].neighbor <= 0\r\n        && cellData[nextY][nextX].flaged === false\r\n        && cellData[nextY][nextX].mine === false) {\r\n        numofExtraCell += this.depthFirstSearch({ y: nextY, x: nextX });\r\n      }\r\n    }\r\n\r\n    return numofExtraCell;\r\n  }\r\n\r\n  // 연쇄 충돌을 일으키기전 빈칸주위(근처지뢰가 있는 셀)을 체크하는 함수\r\n  public setNeighborCell(coord: Coord): number {\r\n\r\n    let numofExtraCell: number = 0;\r\n    const { y, x }: Coord = coord;\r\n    const cellData: CellData[][] = this.cellData;\r\n\r\n    for (let i = y - 1; i <= y + 1; i++) {\r\n      for (let j = x - 1; j <= x + 1; j++) {\r\n\r\n        if (this.checkOutRange(i, j)) {\r\n          continue;\r\n        }\r\n        if (i === y && j === x) {\r\n          continue;\r\n        }\r\n        if (cellData[i][j].visited === true) {\r\n          continue;\r\n        }\r\n        if (cellData[i][j].neighbor > 0 && cellData[i][j].flaged === false) {\r\n          cellData[i][j].visible = cellData[i][j].neighbor;\r\n          cellData[i][j].visited = true;\r\n          numofExtraCell++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return numofExtraCell;\r\n  }\r\n\r\n  public abstract process(): ClickRenderStatus;\r\n}","import { ClickHandler } from './ClickHandler';\r\nimport { CellData, Coord, ClickRenderStatus } from './Common';\r\n\r\nconst noRender: ClickRenderStatus = {\r\n  render: false,\r\n  flag: false,\r\n  removeCell: -1\r\n}\r\n\r\nconst gameOver: ClickRenderStatus = {\r\n  render: true,\r\n  flag: false,\r\n  removeCell: 987654321\r\n}\r\n\r\nclass LeftClickHandler extends ClickHandler {\r\n\r\n  public process(): ClickRenderStatus {\r\n\r\n    const { y, x }: Coord = this.coord;\r\n    const cellData: CellData[][] = this.cellData;\r\n\r\n    // 방문한 곳은 클릭할 수 없다.\r\n    if (cellData[y][x].visited === true) {\r\n      return noRender;\r\n    }\r\n\r\n    // 깃발은 클릭할 수 없다.\r\n    if (cellData[y][x].flaged === true) {\r\n      return noRender;\r\n    }\r\n\r\n    // 지뢰면 게임오버다.\r\n    if (cellData[y][x].mine === true) {\r\n      cellData[y][x].visible = '💣';\r\n      return gameOver;\r\n    }\r\n\r\n    // 주위 \r\n    if (cellData[y][x].neighbor > 0) {\r\n      cellData[y][x].visible = cellData[y][x].neighbor;\r\n      cellData[y][x].visited = true;\r\n      return {\r\n        render: true,\r\n        flag: false,\r\n        removeCell: 1\r\n      } as ClickRenderStatus;\r\n    }\r\n\r\n    const numofRemoveCell: number = this.depthFirstSearch({ y, x });\r\n    return {\r\n      render: true,\r\n      flag: false,\r\n      removeCell: numofRemoveCell\r\n    } as ClickRenderStatus;\r\n  }\r\n}\r\n\r\nexport default LeftClickHandler;","import { ClickHandler } from './ClickHandler';\r\nimport { CellData, Coord, ClickRenderStatus } from './Common';\r\n\r\nconst noRender: ClickRenderStatus = {\r\n  render: false,\r\n  flag: false,\r\n  removeCell: -1\r\n}\r\n\r\nclass RightClickHandler extends ClickHandler {\r\n\r\n  public process(): ClickRenderStatus {\r\n\r\n    const cellData: CellData[][] = this.cellData;\r\n    const { y, x }: Coord = this.coord;\r\n\r\n    if (cellData[y][x].visited === true\r\n      && (cellData[y][x].neighbor > 0\r\n        || cellData[y][x].neighbor <= 0)) {\r\n\r\n      return noRender;\r\n    }\r\n\r\n    let value: boolean = cellData[y][x].flaged;\r\n    value = !value;\r\n    cellData[y][x].flaged = value;\r\n    cellData[y][x].visible = value === true ? '🚩' : ' ';\r\n\r\n    return {\r\n      render: true,\r\n      flag: true,\r\n      removeCell: 0\r\n    } as ClickRenderStatus\r\n  }\r\n}\r\n\r\nexport default RightClickHandler;","import { ClickHandler } from './ClickHandler';\r\nimport { CellData, Coord, ClickRenderStatus } from './Common';\r\n\r\ninterface WheelClickInterFace {\r\n  isFlagonMine(y: number, x: number): boolean;\r\n}\r\n\r\nconst noRender: ClickRenderStatus = {\r\n  render: false,\r\n  flag: false,\r\n  removeCell: -1\r\n}\r\n\r\nconst gameOver: ClickRenderStatus = {\r\n  render: true,\r\n  flag: false,\r\n  removeCell: 987654321\r\n}\r\n\r\nclass WheelClickHandler extends ClickHandler implements WheelClickInterFace {\r\n\r\n  public process(): ClickRenderStatus {\r\n\r\n    let numofExtraCell: number = 0;\r\n    const cellData: CellData[][] = this.cellData;\r\n    const { y, x }: Coord = this.coord;\r\n\r\n    if (cellData[y][x].neighbor < 0\r\n      || cellData[y][x].flaged === true\r\n      || cellData[y][x].visited === false) {\r\n\r\n      console.log('norender');\r\n      return noRender;\r\n    }\r\n\r\n    let numofHit: number = 0;\r\n    let numofAroundFlag: number = 0;\r\n\r\n    for (let i = y - 1; i <= y + 1; i++) {\r\n      for (let j = x - 1; j <= x + 1; j++) {\r\n        if (this.checkOutRange(i, j)) {\r\n          continue;\r\n        }\r\n        if (cellData[i][j].flaged === true) {\r\n          numofAroundFlag++;\r\n        }\r\n        if (this.isFlagonMine(i, j)) {\r\n          numofHit++;\r\n        }\r\n      }\r\n    }\r\n\r\n    // 주위 깃발을 무지성으로 많이 꼽으면 게임오버\r\n    if (numofAroundFlag > cellData[y][x].neighbor) {\r\n      return gameOver;\r\n    }\r\n\r\n    // 깃발개수는 같아도 정확히 지뢰위 깃발을 꼽지 않았다면 게임오버\r\n    if (numofAroundFlag === cellData[y][x].neighbor && numofHit !== cellData[y][x].neighbor) {\r\n      return gameOver;\r\n    }\r\n\r\n    if (numofHit !== cellData[y][x].neighbor) {\r\n      return noRender;\r\n    }\r\n\r\n    for (let i = y - 1; i <= y + 1; i++) {\r\n      for (let j = x - 1; j <= x + 1; j++) {\r\n        if (this.checkOutRange(i, j)) {\r\n          continue;\r\n        }\r\n        if (cellData[i][j].flaged === true || cellData[i][j].visited === true) {\r\n          continue;\r\n        }\r\n        if (cellData[i][j].neighbor > 0) {\r\n          cellData[i][j].visible = cellData[i][j].neighbor;\r\n          cellData[i][j].visited = true;\r\n          numofExtraCell++;\r\n          continue;\r\n        }\r\n        numofExtraCell += this.depthFirstSearch({ y: i, x: j });\r\n      }\r\n    }\r\n\r\n    return {\r\n      render: true,\r\n      flag: false,\r\n      removeCell: numofExtraCell\r\n    } as ClickRenderStatus;\r\n  }\r\n\r\n\r\n  public isFlagonMine(y: number, x: number): boolean {\r\n    return this.cellData[y][x].flaged === true && this.cellData[y][x].mine === true;\r\n  }\r\n}\r\n\r\nexport default WheelClickHandler;","import React, { ReactText } from \"react\";\r\n\r\nconst colorofButtonNumber: string[] = [\r\n  \"\",\r\n  \"#FF245E\",\r\n  \"#8CA9FA\",\r\n  \"#FFAA39\",\r\n  \"#7EEE62\",\r\n  \"#D9D1E8\",\r\n  \"#0DEBEB\",\r\n  \"#A566F8\",\r\n  \"#A9350B\"\r\n];\r\n\r\ninterface CellProps {\r\n  value: string | number | ReactText,\r\n  islock: boolean,\r\n  onMouseDown: React.MouseEventHandler<HTMLDivElement>,\r\n  onContextMenu: React.MouseEventHandler<HTMLDivElement>\r\n};\r\n\r\nconst Cell = (props: CellProps) => {\r\n\r\n  const { value, islock, onMouseDown, onContextMenu }: CellProps = props;\r\n  const strColor = colorofButtonNumber[value];\r\n\r\n  return (\r\n    <div\r\n      className={islock ? \"lock\" : \"cell\"}\r\n      onMouseDown={onMouseDown}\r\n      onContextMenu={onContextMenu}\r\n    >\r\n      <div className='cell-text' style={{ color: `${strColor}` }}>{value}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cell;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Level, CellData, Coord, ClickRenderStatus } from '../modules/Common';\r\nimport '../styles/Game.css';\r\nimport * as cellHandler from '../modules/CellHandler';\r\nimport GameInfo from './GameInfo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setExtraCell } from '../reducers/Game';\r\nimport { RootState } from '../reducers';\r\nimport createClickFactory from '../modules/ClickFactory';\r\nimport Cell from './Cell';\r\nimport styled from 'styled-components';\r\n\r\nconst GameBoardWrapper = styled.div<{\r\n  minWidth: string\r\n}>`\r\n  background-color: #2e2d2d;\r\n  border-radius: 5px;\r\n  padding:20px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  position: absolute;\r\n  border:2px solid var(--main-theme-color);\r\n  min-width: ${({ minWidth }) => minWidth};\r\n`;\r\n\r\ninterface GameBoardProps {\r\n  levelInfo: Level;\r\n  minWidth: string;\r\n}\r\n\r\nconst GameBoard = ({ levelInfo, minWidth }: GameBoardProps) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const LEFTCLICK = 0;\r\n\r\n  // 처음 2차원 셀을 생성해주어서 렌더가 안되는 일이 없게 한다.\r\n  const [cellData, setCellData] = useState<CellData[][]>(cellHandler.initializeCell(levelInfo.row, levelInfo.col));\r\n  const [firstClick, setFirstClick] = useState<boolean>(true);\r\n  const [numofFlag, setNumofFlag] = useState<number>(levelInfo.numberOfMine);\r\n\r\n  // useSelector는 항상 최상단 함수에 작성한다.\r\n  const { extraCell, gameRestart } = useSelector((state: RootState) => ({\r\n    extraCell: state.game.isGameOver,\r\n    gameRestart: state.game.gameRestart,\r\n  }));\r\n\r\n  // useeffect를 사용하여 액션발행을 하고 GameInfo 컴포넌트의 렌더링을 방해하지 않도록 한다.\r\n  // useeffect의 내부 수행로직은 렌더링이 된 후 수행을 보장한다. \r\n  // 그럼으로 setFlag액션을 발행하면 Board가 렌더링이 되었다는 것을\r\n  // 보장한다. 그 후에 GameInfo를 렌더링한다.\r\n\r\n  useEffect(() => {\r\n\r\n    const { row, col, numberOfMine } = levelInfo;\r\n    let newCellData: CellData[][] = cellHandler.initializeCell(row, col);\r\n\r\n    cellHandler.plantMine(newCellData, numberOfMine);\r\n    cellHandler.getNeighbor(newCellData, { row, col, numberOfMine });\r\n\r\n    setCellData(newCellData);\r\n    setNumofFlag(numberOfMine);\r\n    setFirstClick(true);\r\n    dispatch(setExtraCell((row * col) - numberOfMine));\r\n\r\n  }, [gameRestart, levelInfo, dispatch]);\r\n\r\n\r\n  const onCellClick = (e: React.MouseEvent<HTMLDivElement>, { y, x }: Coord) => {\r\n\r\n    e.preventDefault();\r\n    // 배열 state를 사용할 때 복사해서 사용하자.\r\n    const newCellData: CellData[][] = [...cellData];\r\n\r\n    onFirstClick(firstClick, e.button, newCellData, { y, x });\r\n    const { row, col } = levelInfo;\r\n\r\n    let clickController = createClickFactory(e.button, newCellData, { y, x }, { row, col });\r\n    const renderStatus: ClickRenderStatus = clickController.process();\r\n\r\n    if (renderStatus.render === true) {\r\n      if (renderStatus.flag === true) {\r\n        clickController.getCellData()[y][x].flaged === true\r\n          ? setNumofFlag(numofFlag => numofFlag - 1)\r\n          : setNumofFlag(numofFlag => numofFlag + 1);\r\n      }\r\n\r\n      dispatch(setExtraCell(extraCell - renderStatus.removeCell));\r\n      setCellData(newCellData);\r\n    }\r\n    clickController = null;\r\n  }\r\n\r\n\r\n  // 첫번째 클릭에 대한 이벤트 처리\r\n  const onFirstClick = (isFirstClick: boolean, buttonType: number, newCellData: CellData[][], coord: Coord) => {\r\n\r\n    const { y, x }: Coord = coord;\r\n\r\n    if (firstClick === true && buttonType === LEFTCLICK) {\r\n      setFirstClick(false);\r\n\r\n      // 첫클릭에 지뢰를 밟지 아니 하도록 한다.\r\n      if (newCellData[y][x].mine === true) {\r\n        newCellData[y][x].mine = false;\r\n        cellHandler.plantMine(newCellData, 1);\r\n        setCellData(newCellData);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const gameBoard: JSX.Element[] = cellData.map((rowItem, y) => {\r\n\r\n    return (\r\n      <div className='game-container-row' key={y}>\r\n        {rowItem.map((data, x) => {\r\n          return (\r\n            <Cell\r\n              key={(y * rowItem.length) + x}\r\n              value={data.mine && extraCell <= 0 ? '💣' : data.visible}\r\n              islock={data.visited}\r\n              onMouseDown={(e: React.MouseEvent<HTMLDivElement>) => onCellClick(e, { y, x })}\r\n              onContextMenu={(e: React.MouseEvent<HTMLDivElement>) => e.preventDefault()}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  })\r\n\r\n\r\n  return (\r\n    <>\r\n      <GameBoardWrapper\r\n        minWidth={minWidth}\r\n      >\r\n        <GameInfo\r\n          firstClick={firstClick}\r\n          numofFlag={numofFlag}\r\n          isGameOver={extraCell <= 0}\r\n        />\r\n        {gameBoard}\r\n      </GameBoardWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GameBoard;","import React, { useMemo } from 'react';\r\nimport { levelList } from '../modules/Common';\r\nimport Header from './Header';\r\nimport Modal from './Modal';\r\nimport GameBoard from './GameBoard';\r\nimport '../styles/Game.css';\r\n\r\nconst Game = () => {\r\n\r\n  const level = levelList[localStorage.getItem('difficulty')] || levelList.Easy;\r\n \r\n  const checkLevel = useMemo(() => {\r\n    \r\n    if (level.row === 10 && level.col === 10 && level.numberOfMine === 10)\r\n      return 'Easy';\r\n    else if (level.row === 16 && level.col === 16 && level.numberOfMine === 40)\r\n      return 'Normal';\r\n    else return 'Hard';\r\n    \r\n  }, [level]);\r\n\r\n  const checkMinWidth = useMemo(() => {\r\n    \r\n    if (level.row === 10 && level.col === 10 && level.numberOfMine === 10)\r\n      return '294px';\r\n    else if (level.row === 16 && level.col === 16 && level.numberOfMine === 40)\r\n      return '444px';\r\n    else return '794px';\r\n    \r\n  }, [level]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        levelInfo={checkLevel}\r\n      />\r\n      <Header \r\n        selected={'Game'} \r\n      />\r\n      <GameBoard\r\n        levelInfo={level}\r\n        minWidth={checkMinWidth}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Game;"],"sourceRoot":""}